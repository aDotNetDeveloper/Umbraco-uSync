//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.5.96
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

[assembly: PureLiveAssembly]
[assembly:ModelsBuilderAssembly(PureLive = true, SourceHash = "a2d0332d95b2a83d")]
[assembly:System.Reflection.AssemblyVersion("0.0.0.2")]

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1061 with alias "banner"
	/// <summary>Banner</summary>
	public partial interface IBanner : IPublishedContent
	{
		/// <summary>Banner Data</summary>
		Our.Umbraco.Vorto.Models.VortoValue BannerData { get; }
	}

	/// <summary>Banner</summary>
	[PublishedContentModel("banner")]
	public partial class Banner : PublishedContentModel, IBanner
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "banner";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Banner(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Banner, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Banner Data
		///</summary>
		[ImplementPropertyType("bannerData")]
		public Our.Umbraco.Vorto.Models.VortoValue BannerData
		{
			get { return GetBannerData(this); }
		}

		/// <summary>Static getter for Banner Data</summary>
		public static Our.Umbraco.Vorto.Models.VortoValue GetBannerData(IBanner that) { return that.GetPropertyValue<Our.Umbraco.Vorto.Models.VortoValue>("bannerData"); }
	}

	// Mixin content Type 1062 with alias "pageContent"
	/// <summary>Page Content</summary>
	public partial interface IPageContent : IPublishedContent
	{
		/// <summary>Content Data</summary>
		Our.Umbraco.Vorto.Models.VortoValue ContentData { get; }
	}

	/// <summary>Page Content</summary>
	[PublishedContentModel("pageContent")]
	public partial class PageContent : PublishedContentModel, IPageContent
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "pageContent";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public PageContent(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<PageContent, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Content Data
		///</summary>
		[ImplementPropertyType("contentData")]
		public Our.Umbraco.Vorto.Models.VortoValue ContentData
		{
			get { return GetContentData(this); }
		}

		/// <summary>Static getter for Content Data</summary>
		public static Our.Umbraco.Vorto.Models.VortoValue GetContentData(IPageContent that) { return that.GetPropertyValue<Our.Umbraco.Vorto.Models.VortoValue>("contentData"); }
	}

	// Mixin content Type 1063 with alias "pageVisability"
	/// <summary>Page Visability</summary>
	public partial interface IPageVisability : IPublishedContent
	{
		/// <summary>Exclude From Sitemap</summary>
		bool ExcludeFromSitemap { get; }

		/// <summary>Umbraco NaviHide</summary>
		bool UmbracoNaviHide { get; }

		/// <summary>Umbraco Redirect</summary>
		object UmbracoRedirect { get; }
	}

	/// <summary>Page Visability</summary>
	[PublishedContentModel("pageVisability")]
	public partial class PageVisability : PublishedContentModel, IPageVisability
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "pageVisability";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public PageVisability(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<PageVisability, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Exclude From Sitemap
		///</summary>
		[ImplementPropertyType("excludeFromSitemap")]
		public bool ExcludeFromSitemap
		{
			get { return GetExcludeFromSitemap(this); }
		}

		/// <summary>Static getter for Exclude From Sitemap</summary>
		public static bool GetExcludeFromSitemap(IPageVisability that) { return that.GetPropertyValue<bool>("excludeFromSitemap"); }

		///<summary>
		/// Umbraco NaviHide
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return GetUmbracoNaviHide(this); }
		}

		/// <summary>Static getter for Umbraco NaviHide</summary>
		public static bool GetUmbracoNaviHide(IPageVisability that) { return that.GetPropertyValue<bool>("umbracoNaviHide"); }

		///<summary>
		/// Umbraco Redirect
		///</summary>
		[ImplementPropertyType("umbracoRedirect")]
		public object UmbracoRedirect
		{
			get { return GetUmbracoRedirect(this); }
		}

		/// <summary>Static getter for Umbraco Redirect</summary>
		public static object GetUmbracoRedirect(IPageVisability that) { return that.GetPropertyValue("umbracoRedirect"); }
	}

	// Mixin content Type 1064 with alias "sEOData"
	/// <summary>SEO Data</summary>
	public partial interface ISEodata : IPublishedContent
	{
		/// <summary>Meta Description</summary>
		string MetaDescription { get; }

		/// <summary>Meta Page Title</summary>
		string MetaPageTitle { get; }

		/// <summary>Object Graph Image</summary>
		Newtonsoft.Json.Linq.JToken ObjectGraphImage { get; }
	}

	/// <summary>SEO Data</summary>
	[PublishedContentModel("sEOData")]
	public partial class SEodata : PublishedContentModel, ISEodata
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "sEOData";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SEodata(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SEodata, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Meta Description: Meta Descriptions are commonly used in search engine result pages, and are extremely important in gaining user click-through.  Make sure to let users know whether the page contains the information they're looking for.
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return GetMetaDescription(this); }
		}

		/// <summary>Static getter for Meta Description</summary>
		public static string GetMetaDescription(ISEodata that) { return that.GetPropertyValue<string>("metaDescription"); }

		///<summary>
		/// Meta Page Title: The Title should be an accurate and concise description of a page's content, and is critical to both a user experience and search engine optimisation.
		///</summary>
		[ImplementPropertyType("metaPageTitle")]
		public string MetaPageTitle
		{
			get { return GetMetaPageTitle(this); }
		}

		/// <summary>Static getter for Meta Page Title</summary>
		public static string GetMetaPageTitle(ISEodata that) { return that.GetPropertyValue<string>("metaPageTitle"); }

		///<summary>
		/// Object Graph Image
		///</summary>
		[ImplementPropertyType("objectGraphImage")]
		public Newtonsoft.Json.Linq.JToken ObjectGraphImage
		{
			get { return GetObjectGraphImage(this); }
		}

		/// <summary>Static getter for Object Graph Image</summary>
		public static Newtonsoft.Json.Linq.JToken GetObjectGraphImage(ISEodata that) { return that.GetPropertyValue<Newtonsoft.Json.Linq.JToken>("objectGraphImage"); }
	}

	/// <summary>BannerDataItem</summary>
	[PublishedContentModel("bannerDataItem")]
	public partial class BannerDataItem : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "bannerDataItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public BannerDataItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<BannerDataItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Banner Image
		///</summary>
		[ImplementPropertyType("bannerImage")]
		public Newtonsoft.Json.Linq.JToken BannerImage
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JToken>("bannerImage"); }
		}

		///<summary>
		/// Default Language: Select another language to use its page banner as the default for this language
		///</summary>
		[ImplementPropertyType("defaultLanguage")]
		public object DefaultLanguage
		{
			get { return this.GetPropertyValue("defaultLanguage"); }
		}

		///<summary>
		/// Page SubTitle
		///</summary>
		[ImplementPropertyType("pageSubtitle")]
		public string PageSubtitle
		{
			get { return this.GetPropertyValue<string>("pageSubtitle"); }
		}

		///<summary>
		/// Page Summary
		///</summary>
		[ImplementPropertyType("pageSummary")]
		public string PageSummary
		{
			get { return this.GetPropertyValue<string>("pageSummary"); }
		}
	}

	/// <summary>ContentDataItem</summary>
	[PublishedContentModel("contentDataItem")]
	public partial class ContentDataItem : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "contentDataItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ContentDataItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ContentDataItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Default Language: Select another language to use its content as the default for this language
		///</summary>
		[ImplementPropertyType("defaultLanguage")]
		public object DefaultLanguage
		{
			get { return this.GetPropertyValue("defaultLanguage"); }
		}

		///<summary>
		/// Page Content
		///</summary>
		[ImplementPropertyType("pageContent")]
		public IHtmlString PageContent
		{
			get { return this.GetPropertyValue<IHtmlString>("pageContent"); }
		}

		///<summary>
		/// Page Heading
		///</summary>
		[ImplementPropertyType("pageHeading")]
		public string PageHeading
		{
			get { return this.GetPropertyValue<string>("pageHeading"); }
		}
	}

	/// <summary>Page</summary>
	[PublishedContentModel("page")]
	public partial class Page : PublishedContentModel, IPageVisability, ISEodata
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "page";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Page(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Page, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Exclude From Sitemap
		///</summary>
		[ImplementPropertyType("excludeFromSitemap")]
		public bool ExcludeFromSitemap
		{
			get { return PageVisability.GetExcludeFromSitemap(this); }
		}

		///<summary>
		/// Umbraco NaviHide
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return PageVisability.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Umbraco Redirect
		///</summary>
		[ImplementPropertyType("umbracoRedirect")]
		public object UmbracoRedirect
		{
			get { return PageVisability.GetUmbracoRedirect(this); }
		}

		///<summary>
		/// Meta Description: Meta Descriptions are commonly used in search engine result pages, and are extremely important in gaining user click-through.  Make sure to let users know whether the page contains the information they're looking for.
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return SEodata.GetMetaDescription(this); }
		}

		///<summary>
		/// Meta Page Title: The Title should be an accurate and concise description of a page's content, and is critical to both a user experience and search engine optimisation.
		///</summary>
		[ImplementPropertyType("metaPageTitle")]
		public string MetaPageTitle
		{
			get { return SEodata.GetMetaPageTitle(this); }
		}

		///<summary>
		/// Object Graph Image
		///</summary>
		[ImplementPropertyType("objectGraphImage")]
		public Newtonsoft.Json.Linq.JToken ObjectGraphImage
		{
			get { return SEodata.GetObjectGraphImage(this); }
		}
	}

	/// <summary>Content Page</summary>
	[PublishedContentModel("contentPage")]
	public partial class ContentPage : Page, IBanner, IPageContent
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "contentPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ContentPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ContentPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Banner Data
		///</summary>
		[ImplementPropertyType("bannerData")]
		public Our.Umbraco.Vorto.Models.VortoValue BannerData
		{
			get { return Banner.GetBannerData(this); }
		}

		///<summary>
		/// Content Data
		///</summary>
		[ImplementPropertyType("contentData")]
		public Our.Umbraco.Vorto.Models.VortoValue ContentData
		{
			get { return PageContent.GetContentData(this); }
		}
	}

	/// <summary>Home Page</summary>
	[PublishedContentModel("homePage")]
	public partial class HomePage : Page
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "homePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HomePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HomePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Folder</summary>
	[PublishedContentModel("Folder")]
	public partial class Folder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Folder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Folder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Folder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Contents:
		///</summary>
		[ImplementPropertyType("contents")]
		public object Contents
		{
			get { return this.GetPropertyValue("contents"); }
		}
	}

	/// <summary>Image</summary>
	[PublishedContentModel("Image")]
	public partial class Image : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Image";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Image(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Image, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload image
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public Umbraco.Web.Models.ImageCropDataSet UmbracoFile
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("umbracoFile"); }
		}

		///<summary>
		/// Height
		///</summary>
		[ImplementPropertyType("umbracoHeight")]
		public string UmbracoHeight
		{
			get { return this.GetPropertyValue<string>("umbracoHeight"); }
		}

		///<summary>
		/// Width
		///</summary>
		[ImplementPropertyType("umbracoWidth")]
		public string UmbracoWidth
		{
			get { return this.GetPropertyValue<string>("umbracoWidth"); }
		}
	}

	/// <summary>File</summary>
	[PublishedContentModel("File")]
	public partial class File : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "File";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public File(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<File, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload file
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public object UmbracoFile
		{
			get { return this.GetPropertyValue("umbracoFile"); }
		}
	}

	/// <summary>Banner Image</summary>
	[PublishedContentModel("bannerImage")]
	public partial class BannerImage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "bannerImage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public BannerImage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<BannerImage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload image
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public Umbraco.Web.Models.ImageCropDataSet UmbracoFile
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("umbracoFile"); }
		}

		///<summary>
		/// Height
		///</summary>
		[ImplementPropertyType("umbracoHeight")]
		public string UmbracoHeight
		{
			get { return this.GetPropertyValue<string>("umbracoHeight"); }
		}

		///<summary>
		/// Width
		///</summary>
		[ImplementPropertyType("umbracoWidth")]
		public string UmbracoWidth
		{
			get { return this.GetPropertyValue<string>("umbracoWidth"); }
		}
	}

	/// <summary>Banner Media Folder</summary>
	[PublishedContentModel("bannerMediaFolder")]
	public partial class BannerMediaFolder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "bannerMediaFolder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public BannerMediaFolder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<BannerMediaFolder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Member</summary>
	[PublishedContentModel("Member")]
	public partial class Member : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Member";
		public new const PublishedItemType ModelItemType = PublishedItemType.Member;
#pragma warning restore 0109

		public Member(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Member, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Is Approved
		///</summary>
		[ImplementPropertyType("umbracoMemberApproved")]
		public bool UmbracoMemberApproved
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberApproved"); }
		}

		///<summary>
		/// Comments
		///</summary>
		[ImplementPropertyType("umbracoMemberComments")]
		public string UmbracoMemberComments
		{
			get { return this.GetPropertyValue<string>("umbracoMemberComments"); }
		}

		///<summary>
		/// Failed Password Attempts
		///</summary>
		[ImplementPropertyType("umbracoMemberFailedPasswordAttempts")]
		public string UmbracoMemberFailedPasswordAttempts
		{
			get { return this.GetPropertyValue<string>("umbracoMemberFailedPasswordAttempts"); }
		}

		///<summary>
		/// Last Lockout Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLockoutDate")]
		public string UmbracoMemberLastLockoutDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLockoutDate"); }
		}

		///<summary>
		/// Last Login Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLogin")]
		public string UmbracoMemberLastLogin
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLogin"); }
		}

		///<summary>
		/// Last Password Change Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastPasswordChangeDate")]
		public string UmbracoMemberLastPasswordChangeDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastPasswordChangeDate"); }
		}

		///<summary>
		/// Is Locked Out
		///</summary>
		[ImplementPropertyType("umbracoMemberLockedOut")]
		public bool UmbracoMemberLockedOut
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberLockedOut"); }
		}

		///<summary>
		/// Password Answer
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalAnswer")]
		public string UmbracoMemberPasswordRetrievalAnswer
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalAnswer"); }
		}

		///<summary>
		/// Password Question
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalQuestion")]
		public string UmbracoMemberPasswordRetrievalQuestion
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalQuestion"); }
		}
	}

}
